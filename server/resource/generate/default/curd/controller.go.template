package admin

import (
	"context"
	"goteamforlq/api/admin"
	"goteamforlq/internal/model"
	"goteamforlq/internal/service"
)

var @{.varName}Controller = new(@{.varName | LcFirst}Controller)

type @{.varName | LcFirst}Controller struct{}

// List @{.tableComment}列表
func (c *@{.varName | LcFirst}Controller) List(ctx context.Context, req *admin.@{.varName}ListReq) (res *admin.@{.varName}ListRes, err error) {
	getListRes, err := service.@{.varName}().@{.varName}List(ctx, req.@{.varName}ListInput)

	if err != nil {
		return nil, err
	}

	return &admin.@{.varName}ListRes{
		@{.varName}ListOutput: model.@{.varName}ListOutput{
			List: getListRes.List,
			CommonPaginationRes: model.CommonPaginationRes{
				Page:  getListRes.Page,
				Size:  getListRes.Size,
				Total: getListRes.Total,
			},
		},
	}, err
}

@{ if or (eq .options.Step.HasView true) (eq .options.Step.HasEdit true) }
// Detail @{.tableComment}详情
func (c *@{.varName | LcFirst}Controller) Detail(ctx context.Context, req *admin.@{.varName}DetailReq) (res *admin.@{.varName}DetailRes, err error) {
	out, err := service.@{.varName}().@{.varName}Detail(ctx, model.@{.varName}DetailInput{
		@{.varName}Id: req.@{.varName}Id,
	})
	if err != nil {
		return nil, err
	}

	// 构建响应
	res = &admin.@{.varName}DetailRes{@{.varName}DetailOutput: out}

	return res, nil
}
@{end}

@{ if eq .options.Step.HasEdit true }
// Edit @{.tableComment}修改/新增
func (c *@{.varName | LcFirst}Controller) Edit(ctx context.Context, req *admin.@{.varName}EditReq) (res *admin.@{.varName}EditRes, err error) {
	// 调用服务层的 @{.varName}Edit 方法
	out, err := service.@{.varName}().@{.varName}Edit(ctx, req.@{.varName}EditInput)
	if err != nil {
		return nil, err
	}

	// 返回结果
	return &admin.@{.varName}EditRes{@{.varName}Id: out.@{.varName}Id}, nil
}
@{end}

// Status @{.tableComment}状态
func (c *@{.varName | LcFirst}Controller) Status(ctx context.Context, req *admin.@{.varName}StatusReq) (res *admin.@{.varName}StatusRes, err error) {
	err = service.@{.varName}().@{.varName}Status(ctx, model.@{.varName}StatusInput{
		@{.varName}Id: req.@{.varName}Id,
		Field:       req.Field,
	})

	if err != nil {
		return nil, err
	}

	return &admin.@{.varName}StatusRes{}, nil
}

@{ if eq .options.Step.HasDel true }
// Delete @{.tableComment}删除
func (c *@{.varName | LcFirst}Controller) Delete(ctx context.Context, req *admin.@{.varName}DeleteReq) (res *admin.@{.varName}DeleteRes, err error) {
	err = service.@{.varName}().@{.varName}Delete(ctx, model.@{.varName}DeleteInput{
		@{.varName}Id: req.@{.varName}Id,
	})

	if err != nil {
		return nil, err
	}

	return &admin.@{.varName}DeleteRes{}, nil
}
@{end}